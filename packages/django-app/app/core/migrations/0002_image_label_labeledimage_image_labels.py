# Generated by Django 4.0 on 2022-05-26 04:10

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this object should be treated as active. Unselect this instead of deleting objects.', verbose_name='active')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('filename', models.CharField(db_index=True, help_text='The filename of the image.', max_length=1024)),
                ('uri', models.TextField(help_text='The full path of the image in the docker container.')),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
                'db_table': 'images',
                'ordering': ('-id',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this object should be treated as active. Unselect this instead of deleting objects.', verbose_name='active')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('slug', models.CharField(db_index=True, help_text='The slug of the label.', max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Label',
                'verbose_name_plural': 'Labels',
                'db_table': 'labels',
                'ordering': ('-id',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='LabeledImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('deleted_at', models.DateTimeField(db_index=True, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this object should be treated as active. Unselect this instead of deleting objects.', verbose_name='active')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.image')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.label')),
            ],
            options={
                'db_table': 'labeled_images',
                'ordering': ('-id',),
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='image',
            name='labels',
            field=models.ManyToManyField(related_name='images', through='core.LabeledImage', to='core.Label'),
        ),
    ]
